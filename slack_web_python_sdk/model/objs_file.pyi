# coding: utf-8

"""
    Slack Web API

    One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

    The version of the OpenAPI document: 1.7.0
    Created by: https://api.slack.com/support
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from slack_web_python_sdk import schemas  # noqa: F401


class ObjsFile(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            title = schemas.StrSchema
            
            
            class channels(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['DefsChannelId']:
                        return DefsChannelId
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['DefsChannelId'], typing.List['DefsChannelId']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'channels':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'DefsChannelId':
                    return super().__getitem__(i)
            comments_count = schemas.IntSchema
            created = schemas.IntSchema
            date_delete = schemas.IntSchema
            display_as_bot = schemas.BoolSchema
            editable = schemas.BoolSchema
        
            @staticmethod
            def editor() -> typing.Type['DefsUserId']:
                return DefsUserId
            external_id = schemas.StrSchema
            external_type = schemas.StrSchema
            external_url = schemas.StrSchema
            filetype = schemas.StrSchema
            
            
            class groups(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['DefsGroupId']:
                        return DefsGroupId
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['DefsGroupId'], typing.List['DefsGroupId']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'groups':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'DefsGroupId':
                    return super().__getitem__(i)
            has_rich_preview = schemas.BoolSchema
        
            @staticmethod
            def id() -> typing.Type['DefsFileId']:
                return DefsFileId
            image_exif_rotation = schemas.IntSchema
            
            
            class ims(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['DefsDmId']:
                        return DefsDmId
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['DefsDmId'], typing.List['DefsDmId']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'ims':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'DefsDmId':
                    return super().__getitem__(i)
            is_external = schemas.BoolSchema
            is_public = schemas.BoolSchema
            is_starred = schemas.BoolSchema
            is_tombstoned = schemas.BoolSchema
        
            @staticmethod
            def last_editor() -> typing.Type['DefsUserId']:
                return DefsUserId
            mimetype = schemas.StrSchema
            mode = schemas.StrSchema
            name = schemas.StrSchema
            non_owner_editable = schemas.BoolSchema
            num_stars = schemas.IntSchema
            original_h = schemas.IntSchema
            original_w = schemas.IntSchema
            permalink = schemas.StrSchema
            permalink_public = schemas.StrSchema
            pinned_info = schemas.DictSchema
            
            
            class pinned_to(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['DefsChannel']:
                        return DefsChannel
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['DefsChannel'], typing.List['DefsChannel']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'pinned_to':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'DefsChannel':
                    return super().__getitem__(i)
            pretty_type = schemas.StrSchema
            preview = schemas.StrSchema
            public_url_shared = schemas.BoolSchema
            
            
            class reactions(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['ObjsReaction']:
                        return ObjsReaction
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['ObjsReaction'], typing.List['ObjsReaction']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'reactions':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'ObjsReaction':
                    return super().__getitem__(i)
        
            @staticmethod
            def shares() -> typing.Type['ObjsFileShares']:
                return ObjsFileShares
            size = schemas.IntSchema
        
            @staticmethod
            def source_team() -> typing.Type['DefsTeam']:
                return DefsTeam
            state = schemas.StrSchema
            thumb_1024 = schemas.StrSchema
            thumb_1024_h = schemas.IntSchema
            thumb_1024_w = schemas.IntSchema
            thumb_160 = schemas.StrSchema
            thumb_360 = schemas.StrSchema
            thumb_360_h = schemas.IntSchema
            thumb_360_w = schemas.IntSchema
            thumb_480 = schemas.StrSchema
            thumb_480_h = schemas.IntSchema
            thumb_480_w = schemas.IntSchema
            thumb_64 = schemas.StrSchema
            thumb_720 = schemas.StrSchema
            thumb_720_h = schemas.IntSchema
            thumb_720_w = schemas.IntSchema
            thumb_80 = schemas.StrSchema
            thumb_800 = schemas.StrSchema
            thumb_800_h = schemas.IntSchema
            thumb_800_w = schemas.IntSchema
            thumb_960 = schemas.StrSchema
            thumb_960_h = schemas.IntSchema
            thumb_960_w = schemas.IntSchema
            thumb_tiny = schemas.StrSchema
            timestamp = schemas.IntSchema
            updated = schemas.IntSchema
            url_private = schemas.StrSchema
            url_private_download = schemas.StrSchema
            user = schemas.StrSchema
        
            @staticmethod
            def user_team() -> typing.Type['DefsTeam']:
                return DefsTeam
            username = schemas.StrSchema
            __annotations__ = {
                "title": title,
                "channels": channels,
                "comments_count": comments_count,
                "created": created,
                "date_delete": date_delete,
                "display_as_bot": display_as_bot,
                "editable": editable,
                "editor": editor,
                "external_id": external_id,
                "external_type": external_type,
                "external_url": external_url,
                "filetype": filetype,
                "groups": groups,
                "has_rich_preview": has_rich_preview,
                "id": id,
                "image_exif_rotation": image_exif_rotation,
                "ims": ims,
                "is_external": is_external,
                "is_public": is_public,
                "is_starred": is_starred,
                "is_tombstoned": is_tombstoned,
                "last_editor": last_editor,
                "mimetype": mimetype,
                "mode": mode,
                "name": name,
                "non_owner_editable": non_owner_editable,
                "num_stars": num_stars,
                "original_h": original_h,
                "original_w": original_w,
                "permalink": permalink,
                "permalink_public": permalink_public,
                "pinned_info": pinned_info,
                "pinned_to": pinned_to,
                "pretty_type": pretty_type,
                "preview": preview,
                "public_url_shared": public_url_shared,
                "reactions": reactions,
                "shares": shares,
                "size": size,
                "source_team": source_team,
                "state": state,
                "thumb_1024": thumb_1024,
                "thumb_1024_h": thumb_1024_h,
                "thumb_1024_w": thumb_1024_w,
                "thumb_160": thumb_160,
                "thumb_360": thumb_360,
                "thumb_360_h": thumb_360_h,
                "thumb_360_w": thumb_360_w,
                "thumb_480": thumb_480,
                "thumb_480_h": thumb_480_h,
                "thumb_480_w": thumb_480_w,
                "thumb_64": thumb_64,
                "thumb_720": thumb_720,
                "thumb_720_h": thumb_720_h,
                "thumb_720_w": thumb_720_w,
                "thumb_80": thumb_80,
                "thumb_800": thumb_800,
                "thumb_800_h": thumb_800_h,
                "thumb_800_w": thumb_800_w,
                "thumb_960": thumb_960,
                "thumb_960_h": thumb_960_h,
                "thumb_960_w": thumb_960_w,
                "thumb_tiny": thumb_tiny,
                "timestamp": timestamp,
                "updated": updated,
                "url_private": url_private,
                "url_private_download": url_private_download,
                "user": user,
                "user_team": user_team,
                "username": username,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["title"]) -> MetaOapg.properties.title: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["channels"]) -> MetaOapg.properties.channels: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["comments_count"]) -> MetaOapg.properties.comments_count: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["created"]) -> MetaOapg.properties.created: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["date_delete"]) -> MetaOapg.properties.date_delete: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["display_as_bot"]) -> MetaOapg.properties.display_as_bot: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["editable"]) -> MetaOapg.properties.editable: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["editor"]) -> 'DefsUserId': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["external_id"]) -> MetaOapg.properties.external_id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["external_type"]) -> MetaOapg.properties.external_type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["external_url"]) -> MetaOapg.properties.external_url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["filetype"]) -> MetaOapg.properties.filetype: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["groups"]) -> MetaOapg.properties.groups: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["has_rich_preview"]) -> MetaOapg.properties.has_rich_preview: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> 'DefsFileId': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["image_exif_rotation"]) -> MetaOapg.properties.image_exif_rotation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ims"]) -> MetaOapg.properties.ims: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["is_external"]) -> MetaOapg.properties.is_external: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["is_public"]) -> MetaOapg.properties.is_public: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["is_starred"]) -> MetaOapg.properties.is_starred: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["is_tombstoned"]) -> MetaOapg.properties.is_tombstoned: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["last_editor"]) -> 'DefsUserId': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mimetype"]) -> MetaOapg.properties.mimetype: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mode"]) -> MetaOapg.properties.mode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["non_owner_editable"]) -> MetaOapg.properties.non_owner_editable: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["num_stars"]) -> MetaOapg.properties.num_stars: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["original_h"]) -> MetaOapg.properties.original_h: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["original_w"]) -> MetaOapg.properties.original_w: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["permalink"]) -> MetaOapg.properties.permalink: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["permalink_public"]) -> MetaOapg.properties.permalink_public: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pinned_info"]) -> MetaOapg.properties.pinned_info: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pinned_to"]) -> MetaOapg.properties.pinned_to: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pretty_type"]) -> MetaOapg.properties.pretty_type: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["preview"]) -> MetaOapg.properties.preview: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["public_url_shared"]) -> MetaOapg.properties.public_url_shared: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reactions"]) -> MetaOapg.properties.reactions: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["shares"]) -> 'ObjsFileShares': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["size"]) -> MetaOapg.properties.size: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["source_team"]) -> 'DefsTeam': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["state"]) -> MetaOapg.properties.state: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_1024"]) -> MetaOapg.properties.thumb_1024: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_1024_h"]) -> MetaOapg.properties.thumb_1024_h: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_1024_w"]) -> MetaOapg.properties.thumb_1024_w: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_160"]) -> MetaOapg.properties.thumb_160: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_360"]) -> MetaOapg.properties.thumb_360: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_360_h"]) -> MetaOapg.properties.thumb_360_h: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_360_w"]) -> MetaOapg.properties.thumb_360_w: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_480"]) -> MetaOapg.properties.thumb_480: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_480_h"]) -> MetaOapg.properties.thumb_480_h: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_480_w"]) -> MetaOapg.properties.thumb_480_w: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_64"]) -> MetaOapg.properties.thumb_64: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_720"]) -> MetaOapg.properties.thumb_720: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_720_h"]) -> MetaOapg.properties.thumb_720_h: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_720_w"]) -> MetaOapg.properties.thumb_720_w: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_80"]) -> MetaOapg.properties.thumb_80: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_800"]) -> MetaOapg.properties.thumb_800: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_800_h"]) -> MetaOapg.properties.thumb_800_h: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_800_w"]) -> MetaOapg.properties.thumb_800_w: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_960"]) -> MetaOapg.properties.thumb_960: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_960_h"]) -> MetaOapg.properties.thumb_960_h: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_960_w"]) -> MetaOapg.properties.thumb_960_w: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["thumb_tiny"]) -> MetaOapg.properties.thumb_tiny: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["timestamp"]) -> MetaOapg.properties.timestamp: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["updated"]) -> MetaOapg.properties.updated: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["url_private"]) -> MetaOapg.properties.url_private: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["url_private_download"]) -> MetaOapg.properties.url_private_download: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["user"]) -> MetaOapg.properties.user: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["user_team"]) -> 'DefsTeam': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["username"]) -> MetaOapg.properties.username: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["title", "channels", "comments_count", "created", "date_delete", "display_as_bot", "editable", "editor", "external_id", "external_type", "external_url", "filetype", "groups", "has_rich_preview", "id", "image_exif_rotation", "ims", "is_external", "is_public", "is_starred", "is_tombstoned", "last_editor", "mimetype", "mode", "name", "non_owner_editable", "num_stars", "original_h", "original_w", "permalink", "permalink_public", "pinned_info", "pinned_to", "pretty_type", "preview", "public_url_shared", "reactions", "shares", "size", "source_team", "state", "thumb_1024", "thumb_1024_h", "thumb_1024_w", "thumb_160", "thumb_360", "thumb_360_h", "thumb_360_w", "thumb_480", "thumb_480_h", "thumb_480_w", "thumb_64", "thumb_720", "thumb_720_h", "thumb_720_w", "thumb_80", "thumb_800", "thumb_800_h", "thumb_800_w", "thumb_960", "thumb_960_h", "thumb_960_w", "thumb_tiny", "timestamp", "updated", "url_private", "url_private_download", "user", "user_team", "username", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["title"]) -> typing.Union[MetaOapg.properties.title, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["channels"]) -> typing.Union[MetaOapg.properties.channels, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["comments_count"]) -> typing.Union[MetaOapg.properties.comments_count, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["created"]) -> typing.Union[MetaOapg.properties.created, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["date_delete"]) -> typing.Union[MetaOapg.properties.date_delete, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["display_as_bot"]) -> typing.Union[MetaOapg.properties.display_as_bot, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["editable"]) -> typing.Union[MetaOapg.properties.editable, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["editor"]) -> typing.Union['DefsUserId', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["external_id"]) -> typing.Union[MetaOapg.properties.external_id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["external_type"]) -> typing.Union[MetaOapg.properties.external_type, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["external_url"]) -> typing.Union[MetaOapg.properties.external_url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["filetype"]) -> typing.Union[MetaOapg.properties.filetype, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["groups"]) -> typing.Union[MetaOapg.properties.groups, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["has_rich_preview"]) -> typing.Union[MetaOapg.properties.has_rich_preview, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union['DefsFileId', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["image_exif_rotation"]) -> typing.Union[MetaOapg.properties.image_exif_rotation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ims"]) -> typing.Union[MetaOapg.properties.ims, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["is_external"]) -> typing.Union[MetaOapg.properties.is_external, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["is_public"]) -> typing.Union[MetaOapg.properties.is_public, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["is_starred"]) -> typing.Union[MetaOapg.properties.is_starred, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["is_tombstoned"]) -> typing.Union[MetaOapg.properties.is_tombstoned, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["last_editor"]) -> typing.Union['DefsUserId', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mimetype"]) -> typing.Union[MetaOapg.properties.mimetype, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mode"]) -> typing.Union[MetaOapg.properties.mode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["non_owner_editable"]) -> typing.Union[MetaOapg.properties.non_owner_editable, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["num_stars"]) -> typing.Union[MetaOapg.properties.num_stars, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["original_h"]) -> typing.Union[MetaOapg.properties.original_h, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["original_w"]) -> typing.Union[MetaOapg.properties.original_w, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["permalink"]) -> typing.Union[MetaOapg.properties.permalink, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["permalink_public"]) -> typing.Union[MetaOapg.properties.permalink_public, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pinned_info"]) -> typing.Union[MetaOapg.properties.pinned_info, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pinned_to"]) -> typing.Union[MetaOapg.properties.pinned_to, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pretty_type"]) -> typing.Union[MetaOapg.properties.pretty_type, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["preview"]) -> typing.Union[MetaOapg.properties.preview, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["public_url_shared"]) -> typing.Union[MetaOapg.properties.public_url_shared, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reactions"]) -> typing.Union[MetaOapg.properties.reactions, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["shares"]) -> typing.Union['ObjsFileShares', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["size"]) -> typing.Union[MetaOapg.properties.size, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["source_team"]) -> typing.Union['DefsTeam', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["state"]) -> typing.Union[MetaOapg.properties.state, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_1024"]) -> typing.Union[MetaOapg.properties.thumb_1024, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_1024_h"]) -> typing.Union[MetaOapg.properties.thumb_1024_h, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_1024_w"]) -> typing.Union[MetaOapg.properties.thumb_1024_w, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_160"]) -> typing.Union[MetaOapg.properties.thumb_160, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_360"]) -> typing.Union[MetaOapg.properties.thumb_360, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_360_h"]) -> typing.Union[MetaOapg.properties.thumb_360_h, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_360_w"]) -> typing.Union[MetaOapg.properties.thumb_360_w, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_480"]) -> typing.Union[MetaOapg.properties.thumb_480, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_480_h"]) -> typing.Union[MetaOapg.properties.thumb_480_h, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_480_w"]) -> typing.Union[MetaOapg.properties.thumb_480_w, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_64"]) -> typing.Union[MetaOapg.properties.thumb_64, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_720"]) -> typing.Union[MetaOapg.properties.thumb_720, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_720_h"]) -> typing.Union[MetaOapg.properties.thumb_720_h, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_720_w"]) -> typing.Union[MetaOapg.properties.thumb_720_w, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_80"]) -> typing.Union[MetaOapg.properties.thumb_80, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_800"]) -> typing.Union[MetaOapg.properties.thumb_800, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_800_h"]) -> typing.Union[MetaOapg.properties.thumb_800_h, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_800_w"]) -> typing.Union[MetaOapg.properties.thumb_800_w, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_960"]) -> typing.Union[MetaOapg.properties.thumb_960, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_960_h"]) -> typing.Union[MetaOapg.properties.thumb_960_h, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_960_w"]) -> typing.Union[MetaOapg.properties.thumb_960_w, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["thumb_tiny"]) -> typing.Union[MetaOapg.properties.thumb_tiny, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["timestamp"]) -> typing.Union[MetaOapg.properties.timestamp, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["updated"]) -> typing.Union[MetaOapg.properties.updated, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["url_private"]) -> typing.Union[MetaOapg.properties.url_private, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["url_private_download"]) -> typing.Union[MetaOapg.properties.url_private_download, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["user"]) -> typing.Union[MetaOapg.properties.user, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["user_team"]) -> typing.Union['DefsTeam', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["username"]) -> typing.Union[MetaOapg.properties.username, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["title", "channels", "comments_count", "created", "date_delete", "display_as_bot", "editable", "editor", "external_id", "external_type", "external_url", "filetype", "groups", "has_rich_preview", "id", "image_exif_rotation", "ims", "is_external", "is_public", "is_starred", "is_tombstoned", "last_editor", "mimetype", "mode", "name", "non_owner_editable", "num_stars", "original_h", "original_w", "permalink", "permalink_public", "pinned_info", "pinned_to", "pretty_type", "preview", "public_url_shared", "reactions", "shares", "size", "source_team", "state", "thumb_1024", "thumb_1024_h", "thumb_1024_w", "thumb_160", "thumb_360", "thumb_360_h", "thumb_360_w", "thumb_480", "thumb_480_h", "thumb_480_w", "thumb_64", "thumb_720", "thumb_720_h", "thumb_720_w", "thumb_80", "thumb_800", "thumb_800_h", "thumb_800_w", "thumb_960", "thumb_960_h", "thumb_960_w", "thumb_tiny", "timestamp", "updated", "url_private", "url_private_download", "user", "user_team", "username", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        title: typing.Union[MetaOapg.properties.title, str, schemas.Unset] = schemas.unset,
        channels: typing.Union[MetaOapg.properties.channels, list, tuple, schemas.Unset] = schemas.unset,
        comments_count: typing.Union[MetaOapg.properties.comments_count, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        created: typing.Union[MetaOapg.properties.created, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        date_delete: typing.Union[MetaOapg.properties.date_delete, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        display_as_bot: typing.Union[MetaOapg.properties.display_as_bot, bool, schemas.Unset] = schemas.unset,
        editable: typing.Union[MetaOapg.properties.editable, bool, schemas.Unset] = schemas.unset,
        editor: typing.Union['DefsUserId', schemas.Unset] = schemas.unset,
        external_id: typing.Union[MetaOapg.properties.external_id, str, schemas.Unset] = schemas.unset,
        external_type: typing.Union[MetaOapg.properties.external_type, str, schemas.Unset] = schemas.unset,
        external_url: typing.Union[MetaOapg.properties.external_url, str, schemas.Unset] = schemas.unset,
        filetype: typing.Union[MetaOapg.properties.filetype, str, schemas.Unset] = schemas.unset,
        groups: typing.Union[MetaOapg.properties.groups, list, tuple, schemas.Unset] = schemas.unset,
        has_rich_preview: typing.Union[MetaOapg.properties.has_rich_preview, bool, schemas.Unset] = schemas.unset,
        id: typing.Union['DefsFileId', schemas.Unset] = schemas.unset,
        image_exif_rotation: typing.Union[MetaOapg.properties.image_exif_rotation, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        ims: typing.Union[MetaOapg.properties.ims, list, tuple, schemas.Unset] = schemas.unset,
        is_external: typing.Union[MetaOapg.properties.is_external, bool, schemas.Unset] = schemas.unset,
        is_public: typing.Union[MetaOapg.properties.is_public, bool, schemas.Unset] = schemas.unset,
        is_starred: typing.Union[MetaOapg.properties.is_starred, bool, schemas.Unset] = schemas.unset,
        is_tombstoned: typing.Union[MetaOapg.properties.is_tombstoned, bool, schemas.Unset] = schemas.unset,
        last_editor: typing.Union['DefsUserId', schemas.Unset] = schemas.unset,
        mimetype: typing.Union[MetaOapg.properties.mimetype, str, schemas.Unset] = schemas.unset,
        mode: typing.Union[MetaOapg.properties.mode, str, schemas.Unset] = schemas.unset,
        name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
        non_owner_editable: typing.Union[MetaOapg.properties.non_owner_editable, bool, schemas.Unset] = schemas.unset,
        num_stars: typing.Union[MetaOapg.properties.num_stars, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        original_h: typing.Union[MetaOapg.properties.original_h, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        original_w: typing.Union[MetaOapg.properties.original_w, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        permalink: typing.Union[MetaOapg.properties.permalink, str, schemas.Unset] = schemas.unset,
        permalink_public: typing.Union[MetaOapg.properties.permalink_public, str, schemas.Unset] = schemas.unset,
        pinned_info: typing.Union[MetaOapg.properties.pinned_info, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        pinned_to: typing.Union[MetaOapg.properties.pinned_to, list, tuple, schemas.Unset] = schemas.unset,
        pretty_type: typing.Union[MetaOapg.properties.pretty_type, str, schemas.Unset] = schemas.unset,
        preview: typing.Union[MetaOapg.properties.preview, str, schemas.Unset] = schemas.unset,
        public_url_shared: typing.Union[MetaOapg.properties.public_url_shared, bool, schemas.Unset] = schemas.unset,
        reactions: typing.Union[MetaOapg.properties.reactions, list, tuple, schemas.Unset] = schemas.unset,
        shares: typing.Union['ObjsFileShares', schemas.Unset] = schemas.unset,
        size: typing.Union[MetaOapg.properties.size, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        source_team: typing.Union['DefsTeam', schemas.Unset] = schemas.unset,
        state: typing.Union[MetaOapg.properties.state, str, schemas.Unset] = schemas.unset,
        thumb_1024: typing.Union[MetaOapg.properties.thumb_1024, str, schemas.Unset] = schemas.unset,
        thumb_1024_h: typing.Union[MetaOapg.properties.thumb_1024_h, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        thumb_1024_w: typing.Union[MetaOapg.properties.thumb_1024_w, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        thumb_160: typing.Union[MetaOapg.properties.thumb_160, str, schemas.Unset] = schemas.unset,
        thumb_360: typing.Union[MetaOapg.properties.thumb_360, str, schemas.Unset] = schemas.unset,
        thumb_360_h: typing.Union[MetaOapg.properties.thumb_360_h, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        thumb_360_w: typing.Union[MetaOapg.properties.thumb_360_w, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        thumb_480: typing.Union[MetaOapg.properties.thumb_480, str, schemas.Unset] = schemas.unset,
        thumb_480_h: typing.Union[MetaOapg.properties.thumb_480_h, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        thumb_480_w: typing.Union[MetaOapg.properties.thumb_480_w, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        thumb_64: typing.Union[MetaOapg.properties.thumb_64, str, schemas.Unset] = schemas.unset,
        thumb_720: typing.Union[MetaOapg.properties.thumb_720, str, schemas.Unset] = schemas.unset,
        thumb_720_h: typing.Union[MetaOapg.properties.thumb_720_h, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        thumb_720_w: typing.Union[MetaOapg.properties.thumb_720_w, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        thumb_80: typing.Union[MetaOapg.properties.thumb_80, str, schemas.Unset] = schemas.unset,
        thumb_800: typing.Union[MetaOapg.properties.thumb_800, str, schemas.Unset] = schemas.unset,
        thumb_800_h: typing.Union[MetaOapg.properties.thumb_800_h, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        thumb_800_w: typing.Union[MetaOapg.properties.thumb_800_w, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        thumb_960: typing.Union[MetaOapg.properties.thumb_960, str, schemas.Unset] = schemas.unset,
        thumb_960_h: typing.Union[MetaOapg.properties.thumb_960_h, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        thumb_960_w: typing.Union[MetaOapg.properties.thumb_960_w, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        thumb_tiny: typing.Union[MetaOapg.properties.thumb_tiny, str, schemas.Unset] = schemas.unset,
        timestamp: typing.Union[MetaOapg.properties.timestamp, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        updated: typing.Union[MetaOapg.properties.updated, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        url_private: typing.Union[MetaOapg.properties.url_private, str, schemas.Unset] = schemas.unset,
        url_private_download: typing.Union[MetaOapg.properties.url_private_download, str, schemas.Unset] = schemas.unset,
        user: typing.Union[MetaOapg.properties.user, str, schemas.Unset] = schemas.unset,
        user_team: typing.Union['DefsTeam', schemas.Unset] = schemas.unset,
        username: typing.Union[MetaOapg.properties.username, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ObjsFile':
        return super().__new__(
            cls,
            *args,
            title=title,
            channels=channels,
            comments_count=comments_count,
            created=created,
            date_delete=date_delete,
            display_as_bot=display_as_bot,
            editable=editable,
            editor=editor,
            external_id=external_id,
            external_type=external_type,
            external_url=external_url,
            filetype=filetype,
            groups=groups,
            has_rich_preview=has_rich_preview,
            id=id,
            image_exif_rotation=image_exif_rotation,
            ims=ims,
            is_external=is_external,
            is_public=is_public,
            is_starred=is_starred,
            is_tombstoned=is_tombstoned,
            last_editor=last_editor,
            mimetype=mimetype,
            mode=mode,
            name=name,
            non_owner_editable=non_owner_editable,
            num_stars=num_stars,
            original_h=original_h,
            original_w=original_w,
            permalink=permalink,
            permalink_public=permalink_public,
            pinned_info=pinned_info,
            pinned_to=pinned_to,
            pretty_type=pretty_type,
            preview=preview,
            public_url_shared=public_url_shared,
            reactions=reactions,
            shares=shares,
            size=size,
            source_team=source_team,
            state=state,
            thumb_1024=thumb_1024,
            thumb_1024_h=thumb_1024_h,
            thumb_1024_w=thumb_1024_w,
            thumb_160=thumb_160,
            thumb_360=thumb_360,
            thumb_360_h=thumb_360_h,
            thumb_360_w=thumb_360_w,
            thumb_480=thumb_480,
            thumb_480_h=thumb_480_h,
            thumb_480_w=thumb_480_w,
            thumb_64=thumb_64,
            thumb_720=thumb_720,
            thumb_720_h=thumb_720_h,
            thumb_720_w=thumb_720_w,
            thumb_80=thumb_80,
            thumb_800=thumb_800,
            thumb_800_h=thumb_800_h,
            thumb_800_w=thumb_800_w,
            thumb_960=thumb_960,
            thumb_960_h=thumb_960_h,
            thumb_960_w=thumb_960_w,
            thumb_tiny=thumb_tiny,
            timestamp=timestamp,
            updated=updated,
            url_private=url_private,
            url_private_download=url_private_download,
            user=user,
            user_team=user_team,
            username=username,
            _configuration=_configuration,
            **kwargs,
        )

from slack_web_python_sdk.model.defs_channel import DefsChannel
from slack_web_python_sdk.model.defs_channel_id import DefsChannelId
from slack_web_python_sdk.model.defs_dm_id import DefsDmId
from slack_web_python_sdk.model.defs_file_id import DefsFileId
from slack_web_python_sdk.model.defs_group_id import DefsGroupId
from slack_web_python_sdk.model.defs_team import DefsTeam
from slack_web_python_sdk.model.defs_user_id import DefsUserId
from slack_web_python_sdk.model.objs_file_shares import ObjsFileShares
from slack_web_python_sdk.model.objs_reaction import ObjsReaction
